<?xml version="1.0"?>
<testsuites>
  <testsuite name="PhantomJS 1.9.8 (Windows 7)" package="" timestamp="2015-01-09T17:29:28" id="0" hostname="AFEQUIERE00477" tests="3" errors="0" failures="0" time="0.57">
    <properties>
      <property name="browser.fullName" value="Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.8 Safari/534.34"/>
    </properties>
    <testcase name="Verify Map is loaded" time="0.421" classname="PhantomJS 1.9.8 (Windows 7).Controller: MainCtrl"/>
    <testcase name="Verify data table loaded" time="0.086" classname="PhantomJS 1.9.8 (Windows 7).Controller: MainCtrl"/>
    <testcase name="Verify attached a list of things to the scope" time="0.063" classname="PhantomJS 1.9.8 (Windows 7).Controller: MainCtrl"/>
    <system-out><![CDATA[PhantomJS 1.9.8 (Windows 7) LOG: Object{}
,PhantomJS 1.9.8 (Windows 7) LOG: [['PTSD', '4946', '24.73%'], ['Substance Abuse', '7957', '39.785%'], ['Previous Hospitalization', '2035', '10.175%'], ['Previous Attempt(s)', '1035', '5.175%'], ['TBI Diagnosis', '4000', '20%'], ['Total High-Risk Veteran Population', '20000', '100%']]
,PhantomJS 1.9.8 (Windows 7) LOG: Scope{$$childTail: null, $$childHead: null, $$nextSibling: null, $$watchers: null, $$listeners: Object{}, $$listenerCount: Object{}, $id: 2, $$ChildScope: null, $parent: Scope{$id: 1, $$childTail: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ...}, $$childHead: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ...}, $$prevSibling: null, $$nextSibling: null, $$watchers: [..., ..., ...], $parent: null, $$phase: '$digest', $root: Scope{$id: ..., $$childTail: ..., $$childHead: ..., $$prevSibling: ..., $$nextSibling: ..., $$watchers: ..., $parent: ..., $$phase: ..., $root: ..., $$destroyed: ..., $$listeners: ..., $$listenerCount: ..., $$isolateBindings: ..., $$asyncQueue: ..., $$postDigestQueue: ..., $$applyAsyncQueue: ..., $$ChildScope: ...}, $$destroyed: false, $$listeners: Object{$stateChangeStart: ...}, $$listenerCount: Object{$stateChangeStart: ...}, $$isolateBindings: null, $$asyncQueue: [], $$postDigestQueue: [], $$applyAsyncQueue: [], $$ChildScope: function ChildScope() { ... }}, $$prevSibling: null, awesomeThings: [], dataSetTable: [[..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...]], currentUser: Object{}, setupMap: function (FacilitiesStateCount) { ... }, setupRiskDataTable: function (risksAtNational) { ... }, updateTotalRiskTableByState: function (state) { ... }, buildTotalRiskTableByState: function (risksAtNational) { ... }, getFacilityByState: function (id) { ... }, buildFacilityByState: function (facilitiesByState) { ... }, stateView: function (id) { ... }, convertToRightStateObj: function (facilityByState) { ... }, vetsInState: Object{US-AK: 1, US-AL: 4, US-AR: 3, US-AZ: 3, US-CA: 8, US-ce: 1, US-CO: 2, US-CT: 1, US-DC: 1, US-DE: 1, US-FL: 7, US-GA: 3, US-HI: 1, US-IA: 3, US-ID: 1, US-IL: 6, US-IN: 3, US-KS: 2, US-KY: 2, US-LA: 3, US-LL: 2, US-MA: 3, US-MD: 1, US-ME: 1, US-MI: 5, US-MN: 2, US-MO: 5, US-MS: 2, US-MT: 1, US-NC: 4, US-ND: 1, US-NE: 2, US-NH: 1, US-NJ: 1, US-NM: 1, US-NV: 2, US-NY: 12, US-OH: 5, US-OK: 2, US-OR: 3, US-PA: 8, US-PI: 1, US-PR: 1, US-RI: 1, US-SC: 2, US-SD: 2, US-TN: 4, US-TX: 8, US-UT: 1, US-VA: 3, US-VT: 1, US-WA: 4, US-WI: 3, US-WN: 1, US-WV: 4, US-WY: 2}}
,PhantomJS 1.9.8 (Windows 7) LOG: Object{}
,PhantomJS 1.9.8 (Windows 7) LOG: [['PTSD', '4946', '24.73%'], ['Substance Abuse', '7957', '39.785%'], ['Previous Hospitalization', '2035', '10.175%'], ['Previous Attempt(s)', '1035', '5.175%'], ['TBI Diagnosis', '4000', '20%'], ['Total High-Risk Veteran Population', '20000', '100%']]
,PhantomJS 1.9.8 (Windows 7) LOG: Scope{$$childTail: null, $$childHead: null, $$nextSibling: null, $$watchers: null, $$listeners: Object{}, $$listenerCount: Object{}, $id: 4, $$ChildScope: null, $parent: Scope{$id: 3, $$childTail: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ...}, $$childHead: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ...}, $$prevSibling: null, $$nextSibling: null, $$watchers: [..., ..., ...], $parent: null, $$phase: '$digest', $root: Scope{$id: ..., $$childTail: ..., $$childHead: ..., $$prevSibling: ..., $$nextSibling: ..., $$watchers: ..., $parent: ..., $$phase: ..., $root: ..., $$destroyed: ..., $$listeners: ..., $$listenerCount: ..., $$isolateBindings: ..., $$asyncQueue: ..., $$postDigestQueue: ..., $$applyAsyncQueue: ..., $$ChildScope: ...}, $$destroyed: false, $$listeners: Object{$stateChangeStart: ...}, $$listenerCount: Object{$stateChangeStart: ...}, $$isolateBindings: null, $$asyncQueue: [], $$postDigestQueue: [], $$applyAsyncQueue: [], $$ChildScope: function ChildScope() { ... }}, $$prevSibling: null, awesomeThings: [], dataSetTable: [[..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...]], currentUser: Object{}, setupMap: function (FacilitiesStateCount) { ... }, setupRiskDataTable: function (risksAtNational) { ... }, updateTotalRiskTableByState: function (state) { ... }, buildTotalRiskTableByState: function (risksAtNational) { ... }, getFacilityByState: function (id) { ... }, buildFacilityByState: function (facilitiesByState) { ... }, stateView: function (id) { ... }, convertToRightStateObj: function (facilityByState) { ... }, vetsInState: Object{US-AK: 1, US-AL: 4, US-AR: 3, US-AZ: 3, US-CA: 8, US-ce: 1, US-CO: 2, US-CT: 1, US-DC: 1, US-DE: 1, US-FL: 7, US-GA: 3, US-HI: 1, US-IA: 3, US-ID: 1, US-IL: 6, US-IN: 3, US-KS: 2, US-KY: 2, US-LA: 3, US-LL: 2, US-MA: 3, US-MD: 1, US-ME: 1, US-MI: 5, US-MN: 2, US-MO: 5, US-MS: 2, US-MT: 1, US-NC: 4, US-ND: 1, US-NE: 2, US-NH: 1, US-NJ: 1, US-NM: 1, US-NV: 2, US-NY: 12, US-OH: 5, US-OK: 2, US-OR: 3, US-PA: 8, US-PI: 1, US-PR: 1, US-RI: 1, US-SC: 2, US-SD: 2, US-TN: 4, US-TX: 8, US-UT: 1, US-VA: 3, US-VT: 1, US-WA: 4, US-WI: 3, US-WN: 1, US-WV: 4, US-WY: 2}}
,PhantomJS 1.9.8 (Windows 7) LOG: [['PTSD', 'undefined', 'undefined%'], ['Substance Abuse', 'undefined', 'undefined%'], ['Previous Hospitalization', 'undefined', 'undefined%'], ['Previous Attempt(s)', 'undefined', 'undefined%'], ['TBI Diagnosis', 'undefined', 'undefined%'], ['Total High-Risk Veteran Population', 'undefined', '100%']]
,PhantomJS 1.9.8 (Windows 7) LOG: Scope{$$childTail: null, $$childHead: null, $$nextSibling: null, $$watchers: null, $$listeners: Object{}, $$listenerCount: Object{}, $id: 4, $$ChildScope: null, $parent: Scope{$id: 3, $$childTail: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ..., dataTableNational: ...}, $$childHead: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ..., dataTableNational: ...}, $$prevSibling: null, $$nextSibling: null, $$watchers: [..., ..., ...], $parent: null, $$phase: null, $root: Scope{$id: ..., $$childTail: ..., $$childHead: ..., $$prevSibling: ..., $$nextSibling: ..., $$watchers: ..., $parent: ..., $$phase: ..., $root: ..., $$destroyed: ..., $$listeners: ..., $$listenerCount: ..., $$isolateBindings: ..., $$asyncQueue: ..., $$postDigestQueue: ..., $$applyAsyncQueue: ..., $$ChildScope: ...}, $$destroyed: false, $$listeners: Object{$stateChangeStart: ...}, $$listenerCount: Object{$stateChangeStart: ...}, $$isolateBindings: null, $$asyncQueue: [], $$postDigestQueue: [], $$applyAsyncQueue: [], $$ChildScope: function ChildScope() { ... }}, $$prevSibling: null, awesomeThings: ['HTML5 Boilerplate', 'AngularJS', 'Karma', 'Express'], dataSetTable: [[..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...]], currentUser: Object{}, setupMap: function (FacilitiesStateCount) { ... }, setupRiskDataTable: function (risksAtNational) { ... }, updateTotalRiskTableByState: function (state) { ... }, buildTotalRiskTableByState: function (risksAtNational) { ... }, getFacilityByState: function (id) { ... }, buildFacilityByState: function (facilitiesByState) { ... }, stateView: function (id) { ... }, convertToRightStateObj: function (facilityByState) { ... }, vetsInState: Object{US-AK: 1, US-AL: 4, US-AR: 3, US-AZ: 3, US-CA: 8, US-ce: 1, US-CO: 2, US-CT: 1, US-DC: 1, US-DE: 1, US-FL: 7, US-GA: 3, US-HI: 1, US-IA: 3, US-ID: 1, US-IL: 6, US-IN: 3, US-KS: 2, US-KY: 2, US-LA: 3, US-LL: 2, US-MA: 3, US-MD: 1, US-ME: 1, US-MI: 5, US-MN: 2, US-MO: 5, US-MS: 2, US-MT: 1, US-NC: 4, US-ND: 1, US-NE: 2, US-NH: 1, US-NJ: 1, US-NM: 1, US-NV: 2, US-NY: 12, US-OH: 5, US-OK: 2, US-OR: 3, US-PA: 8, US-PI: 1, US-PR: 1, US-RI: 1, US-SC: 2, US-SD: 2, US-TN: 4, US-TX: 8, US-UT: 1, US-VA: 3, US-VT: 1, US-WA: 4, US-WI: 3, US-WN: 1, US-WV: 4, US-WY: 2}, dataTableNational: {context: {jQuery111101926388710271567: ..., bgColor: ..., alinkColor: ..., width: ..., plugins: ..., height: ..., fgColor: ..., vlinkColor: ..., all: ..., embeds: ..., scripts: ..., compatMode: ..., activeElement: ..., dir: ..., designMode: ..., linkColor: ..., documentElement: ..., preferredStylesheetSet: ..., xmlVersion: ..., location: ..., xmlEncoding: ..., implementation: ..., referrer: ..., head: ..., defaultView: ..., domain: ..., lastModified: ..., anchors: ..., applets: ..., doctype: ..., images: ..., forms: ..., charset: ..., styleSheets: ..., URL: ..., readyState: ..., selectedStylesheetSet: ..., characterSet: ..., title: ..., cookie: ..., body: ..., inputEncoding: ..., xmlStandalone: ..., documentURI: ..., defaultCharset: ..., links: ..., previousSibling: ..., parentNode: ..., lastChild: ..., baseURI: ..., firstChild: ..., nodeValue: ..., textContent: ..., nodeType: ..., nodeName: ..., prefix: ..., childNodes: ..., nextSibling: ..., attributes: ..., ownerDocument: ..., namespaceURI: ..., localName: ..., parentElement: ...}, selector: '#exampleNational', $: function (a, b) { ... }, _: function (a, b) { ... }, api: function (a) { ... }, fnAddData: function (a, b) { ... }, fnAdjustColumnSizing: function (a) { ... }, fnClearTable: function (a) { ... }, fnClose: function (a) { ... }, fnDeleteRow: function (a, b, c) { ... }, fnDestroy: function (a) { ... }, fnDraw: function (a) { ... }, fnFilter: function (a, b, c, e, d, g) { ... }, fnGetData: function (a, b) { ... }, fnGetNodes: function (a) { ... }, fnGetPosition: function (a) { ... }, fnIsOpen: function (a) { ... }, fnOpen: function (a, b, c) { ... }, fnPageChange: function (a, b) { ... }, fnSetColumnVis: function (a, b, c) { ... }, fnSettings: function () { ... }, fnSort: function (a) { ... }, fnSortListener: function (a, b, c) { ... }, fnUpdate: function (a, b, c, e, d) { ... }, fnVersionCheck: function (a) { ... }, internal: Object{_fnExternApiFunc: ..., _fnBuildAjax: ..., _fnAjaxUpdate: ..., _fnAjaxParameters: ..., _fnAjaxUpdateDraw: ..., _fnAjaxDataSrc: ..., _fnAddColumn: ..., _fnColumnOptions: ..., _fnAdjustColumnSizing: ..., _fnVisibleToColumnIndex: ..., _fnColumnIndexToVisible: ..., _fnVisbleColumns: ..., _fnGetColumns: ..., _fnColumnTypes: ..., _fnApplyColumnDefs: ..., _fnHungarianMap: ..., _fnCamelToHungarian: ..., _fnLanguageCompat: ..., _fnBrowserDetect: ..., _fnAddData: ..., _fnAddTr: ..., _fnNodeToDataIndex: ..., _fnNodeToColumnIndex: ..., _fnGetCellData: ..., _fnSetCellData: ..., _fnSplitObjNotation: ..., _fnGetObjectDataFn: ..., _fnSetObjectDataFn: ..., _fnGetDataMaster: ..., _fnClearTable: ..., _fnDeleteIndex: ..., _fnInvalidate: ..., _fnGetRowElements: ..., _fnCreateTr: ..., _fnBuildHead: ..., _fnDrawHead: ..., _fnDraw: ..., _fnReDraw: ..., _fnAddOptionsHtml: ..., _fnDetectHeader: ..., _fnGetUniqueThs: ..., _fnFeatureHtmlFilter: ..., _fnFilterComplete: ..., _fnFilterCustom: ..., _fnFilterColumn: ..., _fnFilter: ..., _fnFilterCreateSearch: ..., _fnEscapeRegex: ..., _fnFilterData: ..., _fnFeatureHtmlInfo: ..., _fnUpdateInfo: ..., _fnInfoMacros: ..., _fnInitialise: ..., _fnInitComplete: ..., _fnLengthChange: ..., _fnFeatureHtmlLength: ..., _fnFeatureHtmlPaginate: ..., _fnPageChange: ..., _fnFeatureHtmlProcessing: ..., _fnProcessingDisplay: ..., _fnFeatureHtmlTable: ..., _fnScrollDraw: ..., _fnApplyToChildren: ..., _fnCalculateColumnWidths: ..., _fnThrottle: ..., _fnConvertToWidth: ..., _fnScrollingWidthAdjust: ..., _fnGetWidestNode: ..., _fnGetMaxLenString: ..., _fnStringToCss: ..., _fnScrollBarWidth: ..., _fnSortFlatten: ..., _fnSort: ..., _fnSortAria: ..., _fnSortListener: ..., _fnSortAttachListener: ..., _fnSortingClasses: ..., _fnSortData: ..., _fnSaveState: ..., _fnLoadState: ..., _fnSettingsFromNode: ..., _fnLog: ..., _fnMap: ..., _fnBindAction: ..., _fnCallbackReg: ..., _fnCallbackFire: ..., _fnLengthOverflow: ..., _fnRenderer: ..., _fnDataSource: ..., _fnRowAttributes: ..., _fnCalculateEnd: ...}, oApi: Object{_fnExternApiFunc: ..., _fnBuildAjax: ..., _fnAjaxUpdate: ..., _fnAjaxParameters: ..., _fnAjaxUpdateDraw: ..., _fnAjaxDataSrc: ..., _fnAddColumn: ..., _fnColumnOptions: ..., _fnAdjustColumnSizing: ..., _fnVisibleToColumnIndex: ..., _fnColumnIndexToVisible: ..., _fnVisbleColumns: ..., _fnGetColumns: ..., _fnColumnTypes: ..., _fnApplyColumnDefs: ..., _fnHungarianMap: ..., _fnCamelToHungarian: ..., _fnLanguageCompat: ..., _fnBrowserDetect: ..., _fnAddData: ..., _fnAddTr: ..., _fnNodeToDataIndex: ..., _fnNodeToColumnIndex: ..., _fnGetCellData: ..., _fnSetCellData: ..., _fnSplitObjNotation: ..., _fnGetObjectDataFn: ..., _fnSetObjectDataFn: ..., _fnGetDataMaster: ..., _fnClearTable: ..., _fnDeleteIndex: ..., _fnInvalidate: ..., _fnGetRowElements: ..., _fnCreateTr: ..., _fnBuildHead: ..., _fnDrawHead: ..., _fnDraw: ..., _fnReDraw: ..., _fnAddOptionsHtml: ..., _fnDetectHeader: ..., _fnGetUniqueThs: ..., _fnFeatureHtmlFilter: ..., _fnFilterComplete: ..., _fnFilterCustom: ..., _fnFilterColumn: ..., _fnFilter: ..., _fnFilterCreateSearch: ..., _fnEscapeRegex: ..., _fnFilterData: ..., _fnFeatureHtmlInfo: ..., _fnUpdateInfo: ..., _fnInfoMacros: ..., _fnInitialise: ..., _fnInitComplete: ..., _fnLengthChange: ..., _fnFeatureHtmlLength: ..., _fnFeatureHtmlPaginate: ..., _fnPageChange: ..., _fnFeatureHtmlProcessing: ..., _fnProcessingDisplay: ..., _fnFeatureHtmlTable: ..., _fnScrollDraw: ..., _fnApplyToChildren: ..., _fnCalculateColumnWidths: ..., _fnThrottle: ..., _fnConvertToWidth: ..., _fnScrollingWidthAdjust: ..., _fnGetWidestNode: ..., _fnGetMaxLenString: ..., _fnStringToCss: ..., _fnScrollBarWidth: ..., _fnSortFlatten: ..., _fnSort: ..., _fnSortAria: ..., _fnSortListener: ..., _fnSortAttachListener: ..., _fnSortingClasses: ..., _fnSortData: ..., _fnSaveState: ..., _fnLoadState: ..., _fnSettingsFromNode: ..., _fnLog: ..., _fnMap: ..., _fnBindAction: ..., _fnCallbackReg: ..., _fnCallbackFire: ..., _fnLengthOverflow: ..., _fnRenderer: ..., _fnDataSource: ..., _fnRowAttributes: ..., _fnCalculateEnd: ...}, _fnExternApiFunc: function () { ... }, _fnBuildAjax: function () { ... }, _fnAjaxUpdate: function () { ... }, _fnAjaxParameters: function () { ... }, _fnAjaxUpdateDraw: function () { ... }, _fnAjaxDataSrc: function () { ... }, _fnAddColumn: function () { ... }, _fnColumnOptions: function () { ... }, _fnAdjustColumnSizing: function () { ... }, _fnVisibleToColumnIndex: function () { ... }, _fnColumnIndexToVisible: function () { ... }, _fnVisbleColumns: function () { ... }, _fnGetColumns: function () { ... }, _fnColumnTypes: function () { ... }, _fnApplyColumnDefs: function () { ... }, _fnHungarianMap: function () { ... }, _fnCamelToHungarian: function () { ... }, _fnLanguageCompat: function () { ... }, _fnBrowserDetect: function () { ... }, _fnAddData: function () { ... }, _fnAddTr: function () { ... }, _fnNodeToDataIndex: function () { ... }, _fnNodeToColumnIndex: function () { ... }, _fnGetCellData: function () { ... }, _fnSetCellData: function () { ... }, _fnSplitObjNotation: function () { ... }, _fnGetObjectDataFn: function () { ... }, _fnSetObjectDataFn: function () { ... }, _fnGetDataMaster: function () { ... }, _fnClearTable: function () { ... }, _fnDeleteIndex: function () { ... }, _fnInvalidate: function () { ... }, _fnGetRowElements: function () { ... }, _fnCreateTr: function () { ... }, _fnBuildHead: function () { ... }, _fnDrawHead: function () { ... }, _fnDraw: function () { ... }, _fnReDraw: function () { ... }, _fnAddOptionsHtml: function () { ... }, _fnDetectHeader: function () { ... }, _fnGetUniqueThs: function () { ... }, _fnFeatureHtmlFilter: function () { ... }, _fnFilterComplete: function () { ... }, _fnFilterCustom: function () { ... }, _fnFilterColumn: function () { ... }, _fnFilter: function () { ... }, _fnFilterCreateSearch: function () { ... }, _fnEscapeRegex: function () { ... }, _fnFilterData: function () { ... }, _fnFeatureHtmlInfo: function () { ... }, _fnUpdateInfo: function () { ... }, _fnInfoMacros: function () { ... }, _fnInitialise: function () { ... }, _fnInitComplete: function () { ... }, _fnLengthChange: function () { ... }, _fnFeatureHtmlLength: function () { ... }, _fnFeatureHtmlPaginate: function () { ... }, _fnPageChange: function () { ... }, _fnFeatureHtmlProcessing: function () { ... }, _fnProcessingDisplay: function () { ... }, _fnFeatureHtmlTable: function () { ... }, _fnScrollDraw: function () { ... }, _fnApplyToChildren: function () { ... }, _fnCalculateColumnWidths: function () { ... }, _fnThrottle: function () { ... }, _fnConvertToWidth: function () { ... }, _fnScrollingWidthAdjust: function () { ... }, _fnGetWidestNode: function () { ... }, _fnGetMaxLenString: function () { ... }, _fnStringToCss: function () { ... }, _fnScrollBarWidth: function () { ... }, _fnSortFlatten: function () { ... }, _fnSort: function () { ... }, _fnSortAria: function () { ... }, _fnSortListener: function () { ... }, _fnSortAttachListener: function () { ... }, _fnSortingClasses: function () { ... }, _fnSortData: function () { ... }, _fnSaveState: function () { ... }, _fnLoadState: function () { ... }, _fnSettingsFromNode: function () { ... }, _fnLog: function () { ... }, _fnMap: function () { ... }, _fnBindAction: function () { ... }, _fnCallbackReg: function () { ... }, _fnCallbackFire: function () { ... }, _fnLengthOverflow: function () { ... }, _fnRenderer: function () { ... }, _fnDataSource: function () { ... }, _fnRowAttributes: function () { ... }, _fnCalculateEnd: function () { ... }}}
,PhantomJS 1.9.8 (Windows 7) LOG: Object{}
,PhantomJS 1.9.8 (Windows 7) LOG: [['PTSD', '4946', '24.73%'], ['Substance Abuse', '7957', '39.785%'], ['Previous Hospitalization', '2035', '10.175%'], ['Previous Attempt(s)', '1035', '5.175%'], ['TBI Diagnosis', '4000', '20%'], ['Total High-Risk Veteran Population', '20000', '100%']]
,PhantomJS 1.9.8 (Windows 7) LOG: Scope{$$childTail: null, $$childHead: null, $$nextSibling: null, $$watchers: null, $$listeners: Object{}, $$listenerCount: Object{}, $id: 6, $$ChildScope: null, $parent: Scope{$id: 5, $$childTail: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ...}, $$childHead: Scope{$$childTail: ..., $$childHead: ..., $$nextSibling: ..., $$watchers: ..., $$listeners: ..., $$listenerCount: ..., $id: ..., $$ChildScope: ..., $parent: ..., $$prevSibling: ..., awesomeThings: ..., dataSetTable: ..., currentUser: ..., setupMap: ..., setupRiskDataTable: ..., updateTotalRiskTableByState: ..., buildTotalRiskTableByState: ..., getFacilityByState: ..., buildFacilityByState: ..., stateView: ..., convertToRightStateObj: ..., vetsInState: ...}, $$prevSibling: null, $$nextSibling: null, $$watchers: [..., ..., ...], $parent: null, $$phase: '$digest', $root: Scope{$id: ..., $$childTail: ..., $$childHead: ..., $$prevSibling: ..., $$nextSibling: ..., $$watchers: ..., $parent: ..., $$phase: ..., $root: ..., $$destroyed: ..., $$listeners: ..., $$listenerCount: ..., $$isolateBindings: ..., $$asyncQueue: ..., $$postDigestQueue: ..., $$applyAsyncQueue: ..., $$ChildScope: ...}, $$destroyed: false, $$listeners: Object{$stateChangeStart: ...}, $$listenerCount: Object{$stateChangeStart: ...}, $$isolateBindings: null, $$asyncQueue: [], $$postDigestQueue: [], $$applyAsyncQueue: [], $$ChildScope: function ChildScope() { ... }}, $$prevSibling: null, awesomeThings: [], dataSetTable: [[..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...], [..., ..., ...]], currentUser: Object{}, setupMap: function (FacilitiesStateCount) { ... }, setupRiskDataTable: function (risksAtNational) { ... }, updateTotalRiskTableByState: function (state) { ... }, buildTotalRiskTableByState: function (risksAtNational) { ... }, getFacilityByState: function (id) { ... }, buildFacilityByState: function (facilitiesByState) { ... }, stateView: function (id) { ... }, convertToRightStateObj: function (facilityByState) { ... }, vetsInState: Object{US-AK: 1, US-AL: 4, US-AR: 3, US-AZ: 3, US-CA: 8, US-ce: 1, US-CO: 2, US-CT: 1, US-DC: 1, US-DE: 1, US-FL: 7, US-GA: 3, US-HI: 1, US-IA: 3, US-ID: 1, US-IL: 6, US-IN: 3, US-KS: 2, US-KY: 2, US-LA: 3, US-LL: 2, US-MA: 3, US-MD: 1, US-ME: 1, US-MI: 5, US-MN: 2, US-MO: 5, US-MS: 2, US-MT: 1, US-NC: 4, US-ND: 1, US-NE: 2, US-NH: 1, US-NJ: 1, US-NM: 1, US-NV: 2, US-NY: 12, US-OH: 5, US-OK: 2, US-OR: 3, US-PA: 8, US-PI: 1, US-PR: 1, US-RI: 1, US-SC: 2, US-SD: 2, US-TN: 4, US-TX: 8, US-UT: 1, US-VA: 3, US-VT: 1, US-WA: 4, US-WI: 3, US-WN: 1, US-WV: 4, US-WY: 2}}

]]></system-out>
    <system-err/>
  </testsuite>
</testsuites>
